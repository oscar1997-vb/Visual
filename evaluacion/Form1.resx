<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QD+RXhpZgAATU0AKgAAAAgAAwE7AAIAAAAhAAAAModpAAQAAAAB
        AAAAVJydAAEAAABCAAAAtAAAAABPc2NhciBSaWNhcmRvIFJvZHJpZ3VleiBNYXJ0aW5legAAAASQAwAC
        AAAAFAAAAIqQBAACAAAAFAAAAJ6SkQACAAAAAzU5AACSkgACAAAAAzU5AAAAAAAAMjAxOToxMDowOCAx
        NDo1Nzo1OAAyMDE5OjEwOjA4IDE0OjU3OjU4AAAATwBzAGMAYQByACAAUgBpAGMAYQByAGQAbwAgAFIA
        bwBkAHIAaQBnAHUAZQB6ACAATQBhAHIAdABpAG4AZQB6AAAA/9sAQwAHBQUGBQQHBgUGCAcHCAoRCwoJ
        CQoVDxAMERgVGhkYFRgXGx4nIRsdJR0XGCIuIiUoKSssKxogLzMvKjInKisq/9sAQwEHCAgKCQoUCwsU
        KhwYHCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq/8AAEQgA
        aAE3AwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMF
        BQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2
        Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeo
        qaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEB
        AQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET
        IjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2Rl
        ZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT
        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
</value>
  </data>
</root>